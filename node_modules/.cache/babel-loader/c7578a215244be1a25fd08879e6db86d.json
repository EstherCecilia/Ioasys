{"ast":null,"code":"import _slicedToArray from \"C:\\\\CAMP\\\\Trilha Front\\\\Projeto\\\\Ioasys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\CAMP\\\\Trilha Front\\\\Projeto\\\\Ioasys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\CAMP\\\\Trilha Front\\\\Projeto\\\\Ioasys\\\\src\\\\Components\\\\Pages\\\\atoms\\\\TextField\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { change } from \"redux-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MuiTextField from \"@material-ui/core/TextField\";\nimport { Field } from \"./styles.js\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing.unit\n  }\n}));\nexport default function TextField(_ref) {\n  let show = _ref.show,\n      disabled = _ref.disabled,\n      type = _ref.type,\n      id = _ref.id,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? \"\" : _ref$placeholder,\n      data = _ref.data,\n      value = _ref.value,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100px\" : _ref$width,\n      mask = _ref.mask,\n      props = _objectWithoutProperties(_ref, [\"show\", \"disabled\", \"type\", \"id\", \"placeholder\", \"data\", \"value\", \"width\", \"mask\"]);\n\n  const classes = useStyles();\n  return show ? React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      minWidth: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    name: id,\n    disabled: disabled,\n    type: type,\n    label: placeholder,\n    valueToSet: value\n  }, props, {\n    component: Component,\n    color: \"secondary\"\n  }, mask, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))) : null;\n}\n\nfunction Component(_ref2) {\n  let input = _ref2.input,\n      label = _ref2.label,\n      type = _ref2.type,\n      _ref2$meta = _ref2.meta,\n      form = _ref2$meta.form,\n      dispatch = _ref2$meta.dispatch,\n      error = _ref2$meta.error,\n      submitFailed = _ref2$meta.submitFailed,\n      valueToSet = _ref2.valueToSet,\n      required = _ref2.required,\n      props = _objectWithoutProperties(_ref2, [\"input\", \"label\", \"type\", \"meta\", \"valueToSet\", \"required\"]);\n\n  const name = input.name,\n        onChange = input.onChange;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alreadySet = _useState2[0],\n        setAlreadySet = _useState2[1];\n\n  if (required) {\n    label += \" *\";\n    if (error) error += \" *\";\n  }\n\n  useEffect(() => {\n    if (!alreadySet) {\n      dispatch(change(form, name, valueToSet));\n      setAlreadySet(true);\n    }\n  }, [valueToSet]);\n  const classes = useStyles();\n  return React.createElement(MuiTextField, Object.assign({}, props, {\n    label: !error ? label : error,\n    error: !!error,\n    type: type,\n    fullWidth: true\n  }, input, {\n    onChange: onChange,\n    classes: {\n      label: classes.input\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/CAMP/Trilha Front/Projeto/Ioasys/src/Components/Pages/atoms/TextField/index.js"],"names":["React","useState","useEffect","change","makeStyles","FormControl","MuiTextField","Field","useStyles","theme","formControl","margin","spacing","unit","TextField","show","disabled","type","id","placeholder","data","value","width","mask","props","classes","minWidth","Component","input","label","meta","form","dispatch","error","submitFailed","valueToSet","required","name","onChange","alreadySet","setAlreadySet"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { change } from \"redux-form\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport MuiTextField from \"@material-ui/core/TextField\";\r\nimport { Field } from \"./styles.js\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing.unit\r\n  },\r\n}));\r\n\r\nexport default function TextField({\r\n  show,\r\n  disabled,\r\n  type,\r\n  id,\r\n  placeholder = \"\",\r\n  data,\r\n  value,\r\n  width = \"100px\",\r\n  mask,\r\n  ...props\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return show ? (\r\n    <FormControl className={classes.formControl} style={{ minWidth: width }}>\r\n      <Field\r\n        name={id}\r\n        disabled={disabled}\r\n        type={type}\r\n        label={placeholder}\r\n        valueToSet={value}\r\n        {...props}\r\n        component={Component}\r\n        color={\"secondary\"}\r\n        {...mask}\r\n      ></Field>\r\n    </FormControl>\r\n  ) : null;\r\n}\r\n\r\nfunction Component({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { form, dispatch, error, submitFailed },\r\n  valueToSet,\r\n  required,\r\n  ...props\r\n}) {\r\n  const { name, onChange } = input;\r\n\r\n  const [alreadySet, setAlreadySet] = useState(false);\r\n\r\n  if (required) {\r\n    label += \" *\";\r\n\r\n    if (error) error += \" *\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!alreadySet) {\r\n      dispatch(change(form, name, valueToSet));\r\n      setAlreadySet(true);\r\n    }\r\n  }, [valueToSet]);\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiTextField\r\n      {...props}\r\n      label={!error ? label : error}\r\n      error={!!error}\r\n      type={type}\r\n      fullWidth\r\n      {...input}\r\n      onChange={onChange}\r\n      classes={{ label: classes.input }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}