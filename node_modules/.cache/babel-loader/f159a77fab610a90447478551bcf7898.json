{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Usuario\\\\Downloads\\\\Ioasys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Downloads\\\\Ioasys\\\\src\\\\routes.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Router } from \"react-router-dom\";\nimport Main from \"./Components/Pages/Main\";\nimport Login from \"./Components/Pages/Login\";\nimport Signup from \"./Components/Pages/Signup\";\nimport Perfil from \"./Components/Pages/Perfil\";\nimport Contato from \"./Components/Pages/Contato\";\nimport Sobre from \"./Components/Pages/Sobre\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory({\n  basename: \"/\"\n});\nwindow.redirect = history.push;\nexport default function Routes() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        courses = _useState2[0],\n        setCourses = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        usuario = _useState4[0],\n        setUsuario = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        token = _useState6[0],\n        setToken = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        redirect = _useState8[0],\n        setRedirect = _useState8[1];\n\n  useEffect(() => {\n    axios.get(`https://api-edu.herokuapp.com/courses?page=1`).then(res => {\n      setCourses(res.data);\n    });\n  }, []);\n\n  const handleSignIn = values => {\n    axios.post(`https://api-edu.herokuapp.com/login`, {\n      email: values.email,\n      password: values.password\n    }).then(res => {\n      setUsuario(res.data.user.student);\n      localStorage.setItem('token', res.data.token);\n      console.log(res.data.user.student);\n      localStorage.setItem('id', res.data.user.student._id);\n      history.push(\"/perfil\");\n    });\n  };\n\n  const requestToken = () => {\n    const USER_TOKEN = 'Bearer '.concat(localStorage.getItem('token'));\n    const URL = `https://api-edu.herokuapp.com/students/${localStorage.getItem('id')}`;\n    axios.get(URL, {\n      headers: {\n        Authorization: USER_TOKEN\n      }\n    }).then(res => {\n      setUsuario(res.data);\n      history.push(\"/perfil\");\n    });\n  };\n\n  console.log(localStorage.getItem('token'));\n  console.log(localStorage.getItem('id'));\n\n  const Submit = values => {\n    if (values.senha === values.senhaConfirma) {\n      axios.post(`http://api-edu.herokuapp.com/register`, {\n        name: values.nome,\n        course: \"5e24dc32d07b5d29174b98a6\",\n        gender: values.genero,\n        birthdate: values.data,\n        email: values.email,\n        password: values.senha\n      }).then(res => {\n        alert(\"Dados cadastrados com sucesso!\");\n        console.log(res);\n      });\n    } else {\n      alert(\"Senha incorreta!\");\n    }\n\n    console.log(values);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Router, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: () => React.createElement(Login, {\n      onSubmit: handleSignIn,\n      requestToken: requestToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    component: () => React.createElement(Signup, {\n      onSubmit: Submit,\n      data: courses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/contact\",\n    component: () => React.createElement(Contato, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/sobre\",\n    component: () => React.createElement(Sobre, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/perfil\",\n    component: () => React.createElement(Perfil, {\n      usuario: usuario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Usuario/Downloads/Ioasys/src/routes.js"],"names":["React","useState","useEffect","Route","Switch","Router","Main","Login","Signup","Perfil","Contato","Sobre","store","Provider","axios","useHistory","createBrowserHistory","history","basename","window","redirect","push","Routes","courses","setCourses","usuario","setUsuario","token","setToken","setRedirect","get","then","res","data","handleSignIn","values","post","email","password","user","student","localStorage","setItem","console","log","_id","requestToken","USER_TOKEN","concat","getItem","URL","headers","Authorization","Submit","senha","senhaConfirma","name","nome","course","gender","genero","birthdate","alert"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, Router } from \"react-router-dom\";\r\nimport Main from \"./Components/Pages/Main\";\r\nimport Login from \"./Components/Pages/Login\";\r\nimport Signup from \"./Components/Pages/Signup\";\r\nimport Perfil from \"./Components/Pages/Perfil\";\r\nimport Contato from \"./Components/Pages/Contato\";\r\nimport Sobre from \"./Components/Pages/Sobre\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory({\r\n  basename: \"/\"\r\n});\r\nwindow.redirect = history.push;\r\n\r\nexport default function Routes() {\r\n  const [courses, setCourses] = useState([]);\r\n  const [usuario, setUsuario] = useState([]);\r\n  const [token, setToken] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://api-edu.herokuapp.com/courses?page=1`).then(res => {\r\n      setCourses(res.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n        \r\n  const handleSignIn = values => {\r\n    axios\r\n      .post(`https://api-edu.herokuapp.com/login`, {\r\n        email: values.email,\r\n        password: values.password\r\n      })\r\n      .then(res => {\r\n        setUsuario(res.data.user.student);\r\n        localStorage.setItem('token', res.data.token)\r\n        console.log(res.data.user.student)\r\n        localStorage.setItem('id', res.data.user.student._id)\r\n        \r\n        history.push(\"/perfil\");\r\n      });\r\n  };\r\n\r\n  const requestToken = () => {\r\n    const USER_TOKEN = 'Bearer '.concat(localStorage.getItem('token'));\r\n  const URL = `https://api-edu.herokuapp.com/students/${localStorage.getItem('id')}`;\r\n    axios\r\n      .get(URL, { headers: { Authorization: USER_TOKEN } })\r\n      .then(res => {\r\n        setUsuario(res.data);\r\n        history.push(\"/perfil\");\r\n      });\r\n  };\r\n  \r\n  console.log(localStorage.getItem('token'))\r\n  \r\n  console.log(localStorage.getItem('id'))\r\n\r\n  const Submit = values => {\r\n    if (values.senha === values.senhaConfirma) {\r\n      axios\r\n        .post(`http://api-edu.herokuapp.com/register`, {\r\n          name: values.nome,\r\n          course: \"5e24dc32d07b5d29174b98a6\",\r\n          gender: values.genero,\r\n          birthdate: values.data,\r\n          email: values.email,\r\n          password: values.senha\r\n        })\r\n        .then(res => {\r\n          alert(\"Dados cadastrados com sucesso!\");\r\n          console.log(res);\r\n        });\r\n    } else {\r\n      alert(\"Senha incorreta!\");\r\n    }\r\n\r\n    console.log(values);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <Router history={history}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Main} />\r\n            <Route\r\n              path=\"/login\"\r\n              component={() => <Login onSubmit={handleSignIn} requestToken={requestToken} />}\r\n            />\r\n            <Route\r\n              path=\"/register\"\r\n              component={() => <Signup onSubmit={Submit} data={courses} />}\r\n            />\r\n            <Route\r\n              path=\"/contact\"\r\n              component={() => <Contato />}\r\n            />\r\n            <Route\r\n              path=\"/sobre\"\r\n              component={() => <Sobre />}\r\n            />\r\n            <Route\r\n              path=\"/perfil\"\r\n              component={() => <Perfil usuario={usuario} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}