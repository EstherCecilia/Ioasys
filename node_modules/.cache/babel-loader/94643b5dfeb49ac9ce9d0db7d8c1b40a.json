{"ast":null,"code":"import _slicedToArray from \"C:\\\\CAMP\\\\Trilha Front\\\\Projeto\\\\Ioasys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\CAMP\\\\Trilha Front\\\\Projeto\\\\Ioasys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\CAMP\\\\Trilha Front\\\\Projeto\\\\Ioasys\\\\src\\\\Components\\\\Pages\\\\atoms\\\\TextField\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { change } from \"redux-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MuiTextField from \"@material-ui/core/TextField\";\nimport { Field } from \"./styles.js\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing.unit\n  }\n}));\n\nconst TextField = props => {\n  const id = props.id,\n        disabled = props.disabled,\n        type = props.type,\n        placeholder = props.placeholder,\n        _props$meta = props.meta,\n        touched = _props$meta.touched,\n        error = _props$meta.error,\n        warning = _props$meta.warning,\n        mask = props.mask;\n  const classes = useStyles();\n  return React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      minWidth: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    name: id,\n    disabled: disabled,\n    type: type,\n    label: placeholder,\n    valueToSet: value\n  }, props, {\n    color: \"secondary\"\n  }, mask, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), touched && (error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, error) || warning && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, warning))));\n};\n\nfunction Component(_ref) {\n  let input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      form = _ref$meta.form,\n      dispatch = _ref$meta.dispatch,\n      error = _ref$meta.error,\n      valueToSet = _ref.valueToSet,\n      required = _ref.required,\n      props = _objectWithoutProperties(_ref, [\"input\", \"label\", \"type\", \"meta\", \"valueToSet\", \"required\"]);\n\n  const name = input.name,\n        onChange = input.onChange;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alreadySet = _useState2[0],\n        setAlreadySet = _useState2[1];\n\n  if (required) {\n    label += \" *\";\n    if (error) error += \" *\";\n  }\n\n  useEffect(() => {\n    if (!alreadySet) {\n      dispatch(change(form, name, valueToSet));\n      setAlreadySet(true);\n    }\n  }, [valueToSet]);\n  const classes = useStyles();\n  return React.createElement(MuiTextField, Object.assign({}, props, {\n    label: !error ? label : error,\n    error: !!error,\n    type: type,\n    fullWidth: true\n  }, input, {\n    onChange: onChange,\n    classes: {\n      label: classes.input\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/CAMP/Trilha Front/Projeto/Ioasys/src/Components/Pages/atoms/TextField/index.js"],"names":["React","useState","useEffect","change","makeStyles","FormControl","MuiTextField","Field","useStyles","theme","formControl","margin","spacing","unit","TextField","props","id","disabled","type","placeholder","meta","touched","error","warning","mask","classes","minWidth","width","value","Component","input","label","form","dispatch","valueToSet","required","name","onChange","alreadySet","setAlreadySet"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { change } from \"redux-form\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport MuiTextField from \"@material-ui/core/TextField\";\r\nimport { Field } from \"./styles.js\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing.unit\r\n  },\r\n}));\r\n\r\nconst TextField = props => {\r\n  const { id, disabled, type, placeholder, meta: { touched, error, warning }, mask} = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FormControl className={classes.formControl} style={{ minWidth: width }}>\r\n      <Field\r\n        name={id}\r\n        disabled={disabled}\r\n        type={type}\r\n        label={placeholder}\r\n        valueToSet={value}\r\n        {...props}\r\n        color={\"secondary\"}\r\n        {...mask}\r\n      >\r\n        {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n      </Field>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nfunction Component({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { form, dispatch, error },\r\n  valueToSet,\r\n  required,\r\n  ...props\r\n}) {\r\n  const { name, onChange } = input;\r\n\r\n  const [alreadySet, setAlreadySet] = useState(false);\r\n\r\n  if (required) {\r\n    label += \" *\";\r\n\r\n    if (error) error += \" *\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!alreadySet) {\r\n      dispatch(change(form, name, valueToSet));\r\n      setAlreadySet(true);\r\n    }\r\n  }, [valueToSet]);\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiTextField\r\n      {...props}\r\n      label={!error ? label : error}\r\n      error={!!error}\r\n      type={type}\r\n      fullWidth\r\n      {...input}\r\n      onChange={onChange}\r\n      classes={{ label: classes.input }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}