{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Azapfy\\\\Documents\\\\Ioasys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Azapfy\\\\Documents\\\\Ioasys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Azapfy\\\\Documents\\\\Ioasys\\\\src\\\\Components\\\\Pages\\\\atoms\\\\TextField\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Field, change } from \"redux-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MuiTextField from \"@material-ui/core/TextField\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing.unit\n  }\n}));\nexport default function TextField(_ref) {\n  let show = _ref.show,\n      disabled = _ref.disabled,\n      id = _ref.id,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? \"\" : _ref$placeholder,\n      data = _ref.data,\n      value = _ref.value,\n      required = _ref.required,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100px\" : _ref$width,\n      mask = _ref.mask,\n      props = _objectWithoutProperties(_ref, [\"show\", \"disabled\", \"id\", \"placeholder\", \"data\", \"value\", \"required\", \"width\", \"mask\"]);\n\n  const classes = useStyles();\n  return show ? React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      minWidth: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({\n    name: id,\n    disabled: disabled,\n    type: \"text\",\n    label: placeholder,\n    valueToSet: value\n  }, props, {\n    component: Component,\n    required: required\n  }, mask, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))) : null;\n}\n\nfunction Component(_ref2) {\n  let input = _ref2.input,\n      label = _ref2.label,\n      type = _ref2.type,\n      _ref2$meta = _ref2.meta,\n      form = _ref2$meta.form,\n      dispatch = _ref2$meta.dispatch,\n      error = _ref2$meta.error,\n      valueToSet = _ref2.valueToSet,\n      required = _ref2.required,\n      props = _objectWithoutProperties(_ref2, [\"input\", \"label\", \"type\", \"meta\", \"valueToSet\", \"required\"]);\n\n  const name = input.name,\n        onChange = input.onChange;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alreadySet = _useState2[0],\n        setAlreadySet = _useState2[1];\n\n  if (required) {\n    label += \" *\";\n    if (error) error += \" *\";\n  }\n\n  useEffect(() => {\n    if (!alreadySet) {\n      dispatch(change(form, name, valueToSet));\n      setAlreadySet(true);\n    }\n  }, [valueToSet]);\n  return React.createElement(MuiTextField, Object.assign({}, props, {\n    label: !error ? label : error,\n    error: !!error,\n    type: type,\n    fullWidth: true\n  }, input, {\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Azapfy/Documents/Ioasys/src/Components/Pages/atoms/TextField/index.js"],"names":["React","useState","useEffect","Field","change","makeStyles","FormControl","MuiTextField","useStyles","theme","formControl","margin","spacing","unit","TextField","show","disabled","id","placeholder","data","value","required","width","mask","props","classes","minWidth","Component","input","label","type","meta","form","dispatch","error","valueToSet","name","onChange","alreadySet","setAlreadySet"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACnCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcC;AADb;AADsB,CAAL,CAAN,CAA5B;AAMA,eAAe,SAASC,SAAT,OAWZ;AAAA,MAVCC,IAUD,QAVCA,IAUD;AAAA,MATCC,QASD,QATCA,QASD;AAAA,MARCC,EAQD,QARCA,EAQD;AAAA,8BAPCC,WAOD;AAAA,MAPCA,WAOD,iCAPe,EAOf;AAAA,MANCC,IAMD,QANCA,IAMD;AAAA,MALCC,KAKD,QALCA,KAKD;AAAA,MAJCC,QAID,QAJCA,QAID;AAAA,wBAHCC,KAGD;AAAA,MAHCA,KAGD,2BAHS,OAGT;AAAA,MAFCC,IAED,QAFCA,IAED;AAAA,MADIC,KACJ;;AACC,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AAEA,SAAOO,IAAI,GACP,oBAAC,WAAD;AACI,IAAA,SAAS,EAAEU,OAAO,CAACf,WADvB;AAEI,IAAA,KAAK,EAAE;AAAEgB,MAAAA,QAAQ,EAAEJ;AAAZ,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEL,EADV;AAEI,IAAA,QAAQ,EAAED,QAFd;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAEE,WAJX;AAKI,IAAA,UAAU,EAAEE;AALhB,KAMQI,KANR;AAOI,IAAA,SAAS,EAAEG,SAPf;AAQI,IAAA,QAAQ,EAAEN;AARd,KASQE,IATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJJ,CADO,GAiBP,IAjBJ;AAkBH;;AAED,SAASI,SAAT,QAQG;AAAA,MAPCC,KAOD,SAPCA,KAOD;AAAA,MANCC,KAMD,SANCA,KAMD;AAAA,MALCC,IAKD,SALCA,IAKD;AAAA,yBAJCC,IAID;AAAA,MAJSC,IAIT,cAJSA,IAIT;AAAA,MAJeC,QAIf,cAJeA,QAIf;AAAA,MAJyBC,KAIzB,cAJyBA,KAIzB;AAAA,MAHCC,UAGD,SAHCA,UAGD;AAAA,MAFCd,QAED,SAFCA,QAED;AAAA,MADIG,KACJ;;AAAA,QACSY,IADT,GAC4BR,KAD5B,CACSQ,IADT;AAAA,QACeC,QADf,GAC4BT,KAD5B,CACeS,QADf;;AAAA,oBAGqCpC,QAAQ,CAAC,KAAD,CAH7C;AAAA;AAAA,QAGQqC,UAHR;AAAA,QAGoBC,aAHpB;;AAKC,MAAIlB,QAAJ,EAAc;AACVQ,IAAAA,KAAK,IAAI,IAAT;AAEA,QAAIK,KAAJ,EAAWA,KAAK,IAAI,IAAT;AACd;;AAEDhC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACoC,UAAL,EAAiB;AACbL,MAAAA,QAAQ,CAAC7B,MAAM,CAAC4B,IAAD,EAAOI,IAAP,EAAaD,UAAb,CAAP,CAAR;AACAI,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GALQ,EAKN,CAACJ,UAAD,CALM,CAAT;AAOA,SACI,oBAAC,YAAD,oBACQX,KADR;AAEI,IAAA,KAAK,EAAE,CAACU,KAAD,GAASL,KAAT,GAAiBK,KAF5B;AAGI,IAAA,KAAK,EAAE,CAAC,CAACA,KAHb;AAII,IAAA,IAAI,EAAEJ,IAJV;AAKI,IAAA,SAAS;AALb,KAMQF,KANR;AAOI,IAAA,QAAQ,EAAES,QAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAWH","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Field, change } from \"redux-form\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport MuiTextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing.unit\r\n    }\r\n}));\r\n\r\nexport default function TextField({\r\n    show,\r\n    disabled,\r\n    id,\r\n    placeholder = \"\",\r\n    data,\r\n    value,\r\n    required,\r\n    width = \"100px\",\r\n    mask,\r\n    ...props\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    return show ? (\r\n        <FormControl\r\n            className={classes.formControl}\r\n            style={{ minWidth: width }}\r\n        >\r\n            <Field\r\n                name={id}\r\n                disabled={disabled}\r\n                type=\"text\"\r\n                label={placeholder}\r\n                valueToSet={value}\r\n                {...props}\r\n                component={Component}\r\n                required={required}\r\n                {...mask}\r\n            ></Field>\r\n        </FormControl>\r\n    ) : null;\r\n}\r\n\r\nfunction Component({\r\n    input,\r\n    label,\r\n    type,\r\n    meta: { form, dispatch, error },\r\n    valueToSet,\r\n    required,\r\n    ...props\r\n}) {\r\n    const { name, onChange } = input;\r\n\r\n    const [alreadySet, setAlreadySet] = useState(false);\r\n\r\n    if (required) {\r\n        label += \" *\";\r\n\r\n        if (error) error += \" *\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!alreadySet) {\r\n            dispatch(change(form, name, valueToSet));\r\n            setAlreadySet(true);\r\n        }\r\n    }, [valueToSet]);\r\n\r\n    return (\r\n        <MuiTextField\r\n            {...props}\r\n            label={!error ? label : error}\r\n            error={!!error}\r\n            type={type}\r\n            fullWidth\r\n            {...input}\r\n            onChange={onChange}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}